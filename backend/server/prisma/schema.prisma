// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // url      = "postgresql://yash:yash@172.31.0.3:5432/dochub?schema=public"
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

enum AccessType {
  Public 
  Private
  Restricted
}
model AccessList{
  id String @id
  type AccessType
  doc Docs @relation(fields: [docId], references: [id])
  docId String @unique
  // Allowed User[]
  // Restricted User[]
}

model Comment{
  id String @id 
  comment String
  doc Docs @relation(fields:[docId],references: [id])
  docId String
} 

model ImageUrl{
  id String @id
  doc Docs @relation( fields:[docId],references:[id])
  docId String
  imageUrl String
}
model Docs{
  id String @id 
  createdAt DateTime @default(now())
  documentUrl String?
  document Json?
  author    User     @relation(fields: [authorId], references: [id])
  authorId String
  comments Comment[]
  access AccessList?
  imagesUrl ImageUrl[]
}

model User {
  id      String      @id 
  email   String?   @unique
  username String @unique
  firstName    String?
  lastName    String?
  avatar  String?
  docs   Docs[]
}
